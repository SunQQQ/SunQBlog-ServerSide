<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sunquanBlog.mapper.LogSummaryMapper">
    <resultMap id="Log" type="com.sunquanBlog.model.LogSummary">
        <id column="id" property="id"/>
        <result column="ip" property="ip"/>
        <result column="page" property="page"/>
        <result column="city" property="city"/>
        <result column="create_time" property="createTime"/>
        <result column="browser" property="browser"/>
        <result column="platform" property="platform"/>
        <result column="user_id" property="userId"/>
        <result column="entry_time" property="entryTime"/>
        <result column="leave_time" property="leaveTime"/>
        <result column="visit_day" property="visitDay"/>
        <result column="pv" property="pv"/>
    </resultMap>

    <!-- 获取'当天'的访问IP及用户类型（新用户/老用户) -->
    <select id="getTodayOldUser" resultType="java.util.LinkedHashMap">
        <![CDATA[
        SELECT
            a.ip,
            CASE
                WHEN EXISTS (
                        SELECT 1
                        FROM log_daily_ip_summary b
                        WHERE
                            b.ip = a.ip
                          AND b.visit_day < CURDATE()
                    )
                    THEN '老用户'
                ELSE '新用户' END AS user_type
        FROM (
                 SELECT DISTINCT ip FROM log_daily_ip_summary
                 WHERE visit_day >= CURDATE()
                   AND visit_day < DATE_ADD(CURDATE(), INTERVAL 1 DAY)
             ) a
        ]]>
    </select>

    <!-- 获取一段时间内的访问IP及用户类型（新用户/老用户）,即day>0
    比如10号的近3天，包含10、9、8号，不包含7号当天，所以应该是10-2 -->
    <select id="getOldUser" resultType="java.util.LinkedHashMap">
        <![CDATA[
        SELECT
            a.ip,
            CASE
                WHEN EXISTS (
                        SELECT 1
                        FROM log_daily_ip_summary b
                        WHERE
                            b.ip = a.ip
                          AND b.visit_day < DATE_SUB(CURDATE(), INTERVAL (#{days}-1) DAY)
                    )
                    THEN '老用户'
                ELSE '新用户' END AS user_type
        FROM (
                 SELECT DISTINCT ip FROM log_daily_ip_summary
                 WHERE visit_day >= DATE_SUB(CURDATE(), INTERVAL (#{days}-1) DAY)
                   AND visit_day < DATE_ADD(CURDATE(), INTERVAL 1 DAY)
             ) a
        ]]>
    </select>

    <select id="getTodayPlatformRatio" resultType="java.util.LinkedHashMap">
        <![CDATA[
        SELECT
            platform,
            count(1) total
        FROM
            log_daily_ip_summary
        WHERE
            visit_day >= CURDATE()
            AND visit_day < DATE_ADD(CURDATE(), INTERVAL 1 DAY)
        GROUP BY
            platform
        ]]>
    </select>

    <select id="getPlatformRatio" resultType="java.util.LinkedHashMap">
        <![CDATA[
        SELECT
            platform,
            count(1) total
        FROM
            log_daily_ip_summary
        WHERE
            visit_day >= DATE_SUB(CURDATE(), INTERVAL (#{days}-1) DAY)
            AND visit_day < DATE_ADD(CURDATE(), INTERVAL 1 DAY)
        GROUP BY
            platform
        ]]>
    </select>

    <delete id="deleteToday">
        DELETE FROM log_daily_ip_summary
        where visit_day = CURDATE()
    </delete>

    <insert id="insertDailyIpSummary">
        <![CDATA[
        INSERT INTO log_daily_ip_summary (
            visit_day, ip, page, city, browser, user_action,
            platform, user_id, entry_time, leave_time, pv, create_time
        )
        SELECT
            #{visitDay} AS visit_day,
            ip,
            GROUP_CONCAT(DISTINCT page) AS page,
            GROUP_CONCAT(DISTINCT ip_city) AS city,
            GROUP_CONCAT(DISTINCT browser) AS browser,
            GROUP_CONCAT(
                CONCAT(`action`, action_object, action_desc)
                ORDER BY create_time
                SEPARATOR '+'
            ) AS user_action,
            GROUP_CONCAT(DISTINCT platform_type) AS platform,
            GROUP_CONCAT(DISTINCT CASE WHEN user_id > 0 THEN user_id END) AS user_id,
            MIN(create_time) AS entry_time,
            MAX(create_time) AS leave_time,
            COUNT(*) AS pv,
            now() create_time
        FROM `log`
        WHERE
            create_time >= #{startTime}
            AND create_time < #{endTime}
            ${excludeIpsSql}
        GROUP BY ip
        ON DUPLICATE KEY UPDATE
            page = VALUES(page),
            city = VALUES(city),
            browser = VALUES(browser),
            user_action = VALUES(user_action),
            platform = VALUES(platform),
            user_id = VALUES(user_id),
            entry_time = VALUES(entry_time),
            leave_time = VALUES(leave_time),
            pv = VALUES(pv)
        ]]>
    </insert>

    <delete id="cleanAll">
        TRUNCATE TABLE log_daily_ip_summary
    </delete>

    <select id="getTodayIp" resultType="java.util.Map">
        select
            count(*) as todayIpCount,
            coalesce(sum(pv),0) as todayPvCount
        from
            log_daily_ip_summary
        where
            visit_day >= curdate()
    </select>

    <select id="getTotalIp" resultType="java.util.Map">
        select
            count(*) as totalIpCount,
            coalesce(sum(pv),0) as totalPvCount
        from
            log_daily_ip_summary
    </select>

    <select id="getIpDaily" resultType="com.sunquanBlog.model.LogSummary">
        <![CDATA[
        SELECT
            visit_day visitDay,
            count(ip) ip,
            sum(pv) pv
        FROM
            log_daily_ip_summary
        WHERE
            visit_day > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
          AND visit_day < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
        GROUP BY
            visit_day
        ]]>
    </select>

    <select id="getCityDaily" resultType="String">
        <![CDATA[
        SELECT
            group_concat(DISTINCT city ORDER BY ip SEPARATOR '|') citys
        FROM
            log_daily_ip_summary
        WHERE
            visit_day > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
          AND visit_day < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
        ]]>
    </select>

    <select id="getTerminal" resultType="com.sunquanBlog.model.LogTerminalDTO">
        <![CDATA[
        SELECT
            COUNT(case when browser="PC" then 1 END) pcNum,
            COUNT(case when browser="Mobile" then 1 END) mobileNum,
            COUNT(case when browser NOT IN ('PC', 'Mobile') then 1 END) bothNum
        FROM
            log_daily_ip_summary
        WHERE
            visit_day > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
          AND visit_day < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
        ]]>
    </select>

    <select id="getUserAction" resultType="com.sunquanBlog.model.LogDTO">
    <![CDATA[
        SELECT
            log.ip AS ip,
            user.name userName,
            user_action actions,
            city ipCity,
            browser browser,
            TIMESTAMPDIFF(SECOND, log.entry_time,log.leave_time) stayTime,
            DATE_SUB(CURDATE(), INTERVAL #{start} DAY) as day,
            leave_time leaveTime,
            entry_time entryTime
        FROM
            log_daily_ip_summary log
            left JOIN
            user on user.id = log.user_id
        WHERE
            log.visit_day >= DATE_SUB(CURDATE(), INTERVAL #{start} DAY)
          AND log.visit_day < DATE_SUB(CURDATE(), INTERVAL #{end} DAY)
        ORDER BY
            entry_time desc
    ]]>
    </select>

    <select id="getPageDaily" resultType="Map">
        <![CDATA[
        SELECT
            COUNT(CASE WHEN FIND_IN_SET('首页', page) > 0 OR FIND_IN_SET('博文', page) > 0 THEN 1 END) AS 首页,
            COUNT(CASE WHEN FIND_IN_SET('文章详情页', page) > 0 THEN 1 END) AS 文章详情页,
            COUNT(CASE WHEN FIND_IN_SET('留言页', page) > 0 THEN 1 END) AS 留言,
            COUNT(CASE WHEN FIND_IN_SET('时间轴', page) > 0 THEN 1 END) AS 时间轴,
            COUNT(CASE WHEN FIND_IN_SET('关于', page) > 0 THEN 1 END) AS 关于,
            COUNT(CASE WHEN FIND_IN_SET('访问统计', page) > 0 THEN 1 END) AS 访问统计,
            COUNT(CASE WHEN FIND_IN_SET('开放式后台', page) > 0 THEN 1 END) AS 开放式后台,
            COUNT(CASE WHEN FIND_IN_SET('朋友圈', page) > 0 THEN 1 END) AS 朋友圈,
            COUNT(CASE WHEN FIND_IN_SET('文章列表页', page) > 0 THEN 1 END) AS 文章管理页,
            COUNT(CASE WHEN FIND_IN_SET('登录注册页', page) > 0 THEN 1 END) AS 登录注册页,
            COUNT(CASE WHEN FIND_IN_SET('账号管理页', page) > 0 THEN 1 END) AS 账号管理页,
            COUNT(CASE WHEN FIND_IN_SET('贪吃蛇', page) > 0 THEN 1 END) AS 贪吃蛇
        FROM
            log_daily_ip_summary
        WHERE
            visit_day > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
          AND visit_day < DATE_ADD(CURDATE(), INTERVAL 1 DAY)
        ]]>
    </select>

    <select id="latestCutoffTime" resultType="Map">
        select
            create_time latestCutoffTime
        from
            log_daily_ip_summary
        where
            visit_day = CURDATE()
        group by
            latestCutoffTime
    </select>
</mapper>