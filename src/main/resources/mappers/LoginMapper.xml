<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sunquanBlog.mapper.LoginMapper">
    <resultMap id="indexResultMap" type="com.sunquanBlog.model.User">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="created_at" property="createdAt"/>
        <result column="role" property="role"/>
    </resultMap>

    <select id="getAllUser" resultMap="indexResultMap">
        SELECT *
        FROM
            user
        order by
            created_at desc
        limit
            #{start}, #{size}
    </select>

    <select id="getPassword" resultMap="indexResultMap">
        select *
        from user
        where name = #{username}
    </select>

    <insert id="regist">
        INSERT INTO user
            (name, password, email, created_at, role,modify_time,avator)
        VALUES (#{username}, #{password}, #{email}, now(), 'user',now(),FLOOR(RAND() * 5));
    </insert>

    <!-- 添加根据账号名称删除数据的 SQL 语句 -->
    <delete id="deleteByUsername">
        DELETE
        FROM user
        WHERE name = #{username}
    </delete>

    <select id="getUserById" resultMap="indexResultMap">
        select *
        from user
        where id = #{id}
    </select>

    <update id="updateUser">
        update
            user
        set name = #{params.username},
            password = #{params.password},
            email = #{params.email},
            role = #{params.role},
            modify_time = now()
        where id = #{params.id}
    </update>

    <select id="getTotalUser" resultType="java.lang.Integer">
        select count(1)
        from user
    </select>

    <select id="getTodayUser" resultType="java.lang.Integer">
        select count(1)
        from user
        where created_at >= curdate()
    </select>
</mapper>

