<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sunquanBlog.mapper.LogMapper">
    <resultMap id="Log" type="com.sunquanBlog.model.Log">
        <id column="id" property="id"/>
        <result column="ip" property="ip"/>
        <result column="page" property="page"/>
        <result column="ip_city" property="ipCity"/>
        <result column="create_time" property="createTime"/>
        <result column="browser" property="browser"/>
        <result column="action" property="action"/>
        <result column="action_object" property="actionObject"/>
        <result column="action_desc" property="actionDesc"/>
        <result column="platform_type" property="platformType"/>
        <result column="todayIpCount" property="todayIpCount"/>
        <result column="todayPvCount" property="todayPvCount"/>
        <result column="totalIpCount" property="totalIpCount"/>
        <result column="totalPvCount" property="totalPvCount"/>
    </resultMap>

    <insert id="insertLog" parameterType="com.sunquanBlog.model.Log">
        insert into log
            (ip, platform_type,page, ip_city, create_time, browser, action, action_object,action_desc,user_id)
        values
            (#{ip},#{platformType}, #{page}, #{ipCity}, now(), #{browser}, #{action}, #{actionObject},#{actionDesc},#{userId})
    </insert>

    <select id="getTodayIp" resultMap="Log">
        select
            count(distinct ip) as todayIpCount,
            count(*) as todayPvCount
        from
            log
        where
            create_time >= curdate()
            ${excludeIps}
    </select>

    <select id="getTotalIp" resultMap="Log">
        select
            count(distinct ip) as totalIpCount,
            count(*) as totalPvCount
        from
            log
    </select>

    <select id="getWhiteListIP" resultType="java.lang.String">
        <![CDATA[
        select
            ip
        from
            log
        where
            log.create_time >= DATE_SUB(CURDATE(), INTERVAL #{start} DAY)
            AND log.create_time < DATE_SUB(CURDATE(), INTERVAL #{end} DAY)
            AND log.user_id = #{userId}
        group by
            log.ip
        ]]>
    </select>

    <select id="getUserAction" resultType="com.sunquanBlog.model.LogDTO">
        <![CDATA[
        SELECT
            log.ip AS ip,
            Max(user.name) userName,
            GROUP_CONCAT(
                concat(log.action,log.action_object,log.action_desc)
                ORDER BY log.create_time
                SEPARATOR '+'
            ) actions,
            MAX(log.ip_city) ipCity,
            MAX(log.browser) browser,
            TIMESTAMPDIFF(SECOND, MIN(log.create_time),MAX(log.create_time)) stayTime,
            DATE_SUB(CURDATE(), INTERVAL #{start} DAY) as day,
            time(MAX(log.create_time)) leaveTime,
            time(MIN(log.create_time)) entryTime
        FROM
            log
        left JOIN
            user on user.id = log.user_id
        WHERE
            log.create_time >= DATE_SUB(CURDATE(), INTERVAL #{start} DAY)
            AND log.create_time < DATE_SUB(CURDATE(), INTERVAL #{end} DAY)
            ${excludeIps}
        GROUP BY
            log.ip,DATE(log.create_time)
        ORDER BY
            entryTime desc
        ]]>
    </select>
    
    <select id="getIpDaily" resultType="com.sunquanBlog.model.LogIpDailyDTO">
        <![CDATA[
        SELECT
            DATE(create_time) day,
            count(DISTINCT ip) ip,
            count(1) pv
        FROM
            log
        WHERE
            create_time > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
            AND create_time < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
            ${excludeIpsSql}
        GROUP BY
            DATE(create_time)
        ]]>
    </select>

    <select id="getRegisterDaily" resultType="com.sunquanBlog.model.LogIpDailyDTO">
        <![CDATA[
        SELECT
            DATE(created_at) day,
            count(1) register
        FROM
            user
        WHERE
            created_at > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
          AND created_at < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
        GROUP BY
            DATE(created_at)
        ]]>
    </select>

    <select id="getCityDaily" resultType="String">
        <![CDATA[
        SELECT
            group_concat(DISTINCT ip_city ORDER BY ip_city SEPARATOR '|') citys
        FROM
            log
        WHERE
            create_time > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
            AND create_time < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
        ]]>
    </select>

    <select id="getTerminal" resultType="com.sunquanBlog.model.LogTerminalDTO">
        <![CDATA[
        select
            COUNT(case when browser="PC" then 1 END) pcNum,
            COUNT(case when browser="Mobile" then 1 END) mobileNum
        FROM(
                SELECT
                    ip,
                    Max(browser) browser
                FROM
                    log
                WHERE
                    create_time > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
                    AND create_time < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
                    ${excludeIpsSql}
                GROUP BY
                    ip
            ) a
        ]]>
    </select>

    <select id="getPageDaily" resultType="Map">
        <![CDATA[
        SELECT
            COUNT(case when (page="首页" && action_desc="") then 1 end) 博文,
            COUNT(case when page="文章详情页" then 1 end) 文章详情页,
            COUNT(case when (page="留言页"  && action_desc="") then 1 end) 留言,
            COUNT(case when (page="时间轴" && action_desc="") then 1 end) 时间轴,
            COUNT(case when (page="关于"  && action_desc="") then 1 end) 关于,
            COUNT(case when (page="访问统计" && action_desc="") then 1 end) 访问统计,
            COUNT(case when (page="开放式后台" && action_desc="") then 1 end) 开放式后台,
            COUNT(case when (page="朋友圈" && action_desc="") then 1 end) 朋友圈
        FROM
            log
        WHERE
            create_time > DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
            AND create_time < DATE_ADD(CURDATE(),INTERVAL 1 DAY)
            ${excludeIpsSql}
        ]]>
    </select>
</mapper>